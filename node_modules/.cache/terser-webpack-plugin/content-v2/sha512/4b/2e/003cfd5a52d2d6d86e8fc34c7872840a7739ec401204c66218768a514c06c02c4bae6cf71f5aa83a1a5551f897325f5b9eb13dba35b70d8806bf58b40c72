{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{359:function(t,e,s){\"use strict\";s.r(e);var a=s(42),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h2\",{attrs:{id:\"promise\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#promise\"}},[t._v(\"#\")]),t._v(\" Promise\")]),t._v(\" \"),s(\"p\",[t._v(\"定义：简单来说，Promise是一个容器，里面保存着某个未来才会结束的事件(通常是一个异步操作)\\n特点：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"对象的状态不受外界影响：Promise有三种状态，pending、fulfilled和rejected。\\n只有异步操作的结果，可以决定当前是哪一种状态，任何其他操作无法改变它的状态。\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"状态一旦改变，就不会再变。\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"Promise新建后会立即执行\")])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"title3\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#title3\"}},[t._v(\"#\")]),t._v(\" title3\")]),t._v(\" \"),s(\"p\",[t._v(\"content...\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"title3-01\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#title3-01\"}},[t._v(\"#\")]),t._v(\" title3-01\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"small-title\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#small-title\"}},[t._v(\"#\")]),t._v(\" small title\")]),t._v(\" \"),s(\"p\",[t._v(\"content...\")])])}),[],!1,null,null,null);e.default=r.exports}}]);","extractedComments":[]}